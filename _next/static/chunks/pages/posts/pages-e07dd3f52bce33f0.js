(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[666],{7612:function(e,s,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/posts/pages",function(){return n(4589)}])},7845:function(e,s,n){"use strict";var t=n(5893),a=n(536),r=n.n(a),i=(new Date).getFullYear();s.Z={footer:(0,t.jsxs)("footer",{className:"jsx-2447ca1c11803f07",children:[(0,t.jsxs)("small",{className:"jsx-2447ca1c11803f07",children:[(0,t.jsx)("time",{className:"jsx-2447ca1c11803f07",children:i})," \xa9 Your Name.",(0,t.jsx)("a",{href:"/feed.xml",className:"jsx-2447ca1c11803f07",children:"RSS"})]}),(0,t.jsx)(r(),{id:"2447ca1c11803f07",children:"footer.jsx-2447ca1c11803f07{margin-top:8rem}a.jsx-2447ca1c11803f07{float:right}"})]})}},4589:function(e,s,n){"use strict";n.r(s),n.d(s,{default:function(){return d.ZP}});var t,a=n(1799),r=n(9396),i=n(5893),o=n(6871),l=n(7845),c=(n(8198),n(1151)),d=(n(5675),n(7505)),h={filePath:"pages/posts/pages.md",route:"/posts/pages",frontMatter:{title:"Next.js Pages",date:"2021/3/18",description:"Learn more about Next.js pages.",tag:"web development",author:"You"},pageMap:[{kind:"MdxPage",name:"index",route:"/",frontMatter:{type:"page",title:"About",date:"2021-03-19T00:00:00.000Z"}},{kind:"MdxPage",name:"photos",route:"/photos",frontMatter:{type:"page",title:"Photos",date:"2021-03-18T00:00:00.000Z"}},{kind:"Folder",name:"posts",route:"/posts",children:[{kind:"MdxPage",name:"index",route:"/posts",frontMatter:{type:"posts",title:"Posts",date:"2021-03-18T00:00:00.000Z"}},{kind:"MdxPage",name:"markdown",route:"/posts/markdown",frontMatter:{title:"Markdown Examples",date:"2021/3/19",description:"View examples of all possible Markdown options.",tag:"web development",author:"You"}},{kind:"MdxPage",name:"pages",route:"/posts/pages",frontMatter:{title:"Next.js Pages",date:"2021/3/18",description:"Learn more about Next.js pages.",tag:"web development",author:"You"}},{kind:"Meta",data:{markdown:"Markdown Examples",index:"Posts",pages:"Next.js Pages"}}]},{kind:"Folder",name:"tags",route:"/tags",children:[{kind:"MdxPage",name:"[tag]",route:"/tags/[tag]",frontMatter:{type:"tag",title:"Tagged Posts"}},{kind:"Meta",data:{"[tag]":"Tagged Posts"}}]},{kind:"Meta",data:{index:"About",photos:"Photos",posts:"Posts",tags:"Tags"}}],headings:[{type:"heading",depth:1,children:[{type:"text",value:"Next.js Pages",position:{start:{line:2,column:3,offset:3},end:{line:2,column:16,offset:16}}}],position:{start:{line:2,column:1,offset:1},end:{line:2,column:16,offset:16}},value:"Next.js Pages"},{type:"heading",depth:3,children:[{type:"text",value:"Pages with Dynamic Routes",position:{start:{line:16,column:5,offset:462},end:{line:16,column:30,offset:487}}}],position:{start:{line:16,column:1,offset:458},end:{line:16,column:30,offset:487}},value:"Pages with Dynamic Routes"},{type:"heading",depth:2,children:[{type:"text",value:"Pre-rendering",position:{start:{line:22,column:4,offset:774},end:{line:22,column:17,offset:787}}}],position:{start:{line:22,column:1,offset:771},end:{line:22,column:17,offset:787}},value:"Pre-rendering"},{type:"heading",depth:3,children:[{type:"text",value:"Two forms of Pre-rendering",position:{start:{line:28,column:5,offset:1248},end:{line:28,column:31,offset:1274}}}],position:{start:{line:28,column:1,offset:1244},end:{line:28,column:31,offset:1274}},value:"Two forms of Pre-rendering"},{type:"heading",depth:2,children:[{type:"text",value:"Static Generation (Recommended)",position:{start:{line:41,column:4,offset:2476},end:{line:41,column:35,offset:2507}}}],position:{start:{line:41,column:1,offset:2473},end:{line:41,column:35,offset:2507}},value:"Static Generation (Recommended)"},{type:"heading",depth:3,children:[{type:"text",value:"Static Generation without data",position:{start:{line:47,column:5,offset:2858},end:{line:47,column:35,offset:2888}}}],position:{start:{line:47,column:1,offset:2854},end:{line:47,column:35,offset:2888}},value:"Static Generation without data"},{type:"heading",depth:3,children:[{type:"text",value:"Static Generation with data",position:{start:{line:61,column:5,offset:3244},end:{line:61,column:32,offset:3271}}}],position:{start:{line:61,column:1,offset:3240},end:{line:61,column:32,offset:3271}},value:"Static Generation with data"},{type:"heading",depth:4,children:[{type:"text",value:"Scenario 1: Your page ",position:{start:{line:68,column:6,offset:3643},end:{line:68,column:28,offset:3665}}},{type:"strong",children:[{type:"text",value:"content",position:{start:{line:68,column:30,offset:3667},end:{line:68,column:37,offset:3674}}}],position:{start:{line:68,column:28,offset:3665},end:{line:68,column:39,offset:3676}}},{type:"text",value:" depends on external data",position:{start:{line:68,column:39,offset:3676},end:{line:68,column:64,offset:3701}}}],position:{start:{line:68,column:1,offset:3638},end:{line:68,column:64,offset:3701}},value:"Scenario 1: Your page content depends on external data"},{type:"heading",depth:4,children:[{type:"text",value:"Scenario 2: Your page paths depend on external data",position:{start:{line:115,column:6,offset:4930},end:{line:115,column:57,offset:4981}}}],position:{start:{line:115,column:1,offset:4925},end:{line:115,column:57,offset:4981}},value:"Scenario 2: Your page paths depend on external data"},{type:"heading",depth:3,children:[{type:"text",value:"When should I use Static Generation?",position:{start:{line:174,column:5,offset:7310},end:{line:174,column:41,offset:7346}}}],position:{start:{line:174,column:1,offset:7306},end:{line:174,column:41,offset:7346}},value:"When should I use Static Generation?"},{type:"heading",depth:2,children:[{type:"text",value:"Server-side Rendering",position:{start:{line:194,column:4,offset:8664},end:{line:194,column:25,offset:8685}}}],position:{start:{line:194,column:1,offset:8661},end:{line:194,column:25,offset:8685}},value:"Server-side Rendering"},{type:"heading",depth:2,children:[{type:"text",value:"Summary",position:{start:{line:226,column:4,offset:9883},end:{line:226,column:11,offset:9890}}}],position:{start:{line:226,column:1,offset:9880},end:{line:226,column:11,offset:9890}},value:"Summary"}],timestamp:1671535302e3,flexsearch:{codeblocks:!0}};globalThis.__nextra_internal__={pageMap:h.pageMap,route:h.route};function p(e){var s=Object.assign({h1:"h1",p:"p",strong:"strong",a:"a",code:"code",div:"div",pre:"pre",span:"span",h3:"h3",blockquote:"blockquote",h2:"h2",em:"em",ul:"ul",li:"li",ol:"ol",h4:"h4"},(0,c.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.h1,{children:"Next.js Pages"}),"\n",(0,i.jsxs)(s.p,{children:["In Next.js, a ",(0,i.jsx)(s.strong,{children:"page"})," is a ",(0,i.jsx)(s.a,{href:"https://reactjs.org/docs/components-and-props.html",children:"React Component"})," exported from a ",(0,i.jsx)(s.code,{children:".js"}),", ",(0,i.jsx)(s.code,{children:".jsx"}),", ",(0,i.jsx)(s.code,{children:".ts"}),", or ",(0,i.jsx)(s.code,{children:".tsx"})," file in the ",(0,i.jsx)(s.code,{children:"pages"})," directory. Each page is associated with a route based on its file name."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Example"}),": If you create ",(0,i.jsx)(s.code,{children:"pages/about.js"})," that exports a React component like below, it will be accessible at ",(0,i.jsx)(s.code,{children:"/about"}),"."]}),"\n",(0,i.jsx)(s.div,{"data-rehype-pretty-code-fragment":"",children:(0,i.jsx)(s.pre,{children:(0,i.jsxs)(s.code,{"data-language":"text","data-theme":"default",children:[(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"function About() {"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  return <div>About</div>"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"}"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"}})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"export default About"})})]})})}),"\n",(0,i.jsx)(s.h3,{id:"pages-with-dynamic-routes",children:"Pages with Dynamic Routes"}),"\n",(0,i.jsxs)(s.p,{children:["Next.js supports pages with dynamic routes. For example, if you create a file called ",(0,i.jsx)(s.code,{children:"pages/posts/[id].js"}),", then it will be accessible at ",(0,i.jsx)(s.code,{children:"posts/1"}),", ",(0,i.jsx)(s.code,{children:"posts/2"}),", etc."]}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:["To learn more about dynamic routing, check the ",(0,i.jsx)(s.a,{href:"/docs/routing/dynamic-routes.md",children:"Dynamic Routing documentation"}),"."]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"pre-rendering",children:"Pre-rendering"}),"\n",(0,i.jsxs)(s.p,{children:["By default, Next.js ",(0,i.jsx)(s.strong,{children:"pre-renders"})," every page. This means that Next.js generates HTML for each page in advance, instead of having it all done by client-side JavaScript. Pre-rendering can result in better performance and SEO."]}),"\n",(0,i.jsxs)(s.p,{children:["Each generated HTML is associated with minimal JavaScript code necessary for that page. When a page is loaded by the browser, its JavaScript code runs and makes the page fully interactive. (This process is called ",(0,i.jsx)(s.em,{children:"hydration"}),".)"]}),"\n",(0,i.jsx)(s.h3,{id:"two-forms-of-pre-rendering",children:"Two forms of Pre-rendering"}),"\n",(0,i.jsxs)(s.p,{children:["Next.js has two forms of pre-rendering: ",(0,i.jsx)(s.strong,{children:"Static Generation"})," and ",(0,i.jsx)(s.strong,{children:"Server-side Rendering"}),". The difference is in ",(0,i.jsx)(s.strong,{children:"when"})," it generates the HTML for a page."]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.a,{href:"#static-generation-recommended",children:(0,i.jsx)(s.strong,{children:"Static Generation (Recommended)"})}),": The HTML is generated at ",(0,i.jsx)(s.strong,{children:"build time"})," and will be reused on each request."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.a,{href:"#server-side-rendering",children:(0,i.jsx)(s.strong,{children:"Server-side Rendering"})}),": The HTML is generated on ",(0,i.jsx)(s.strong,{children:"each request"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:["Importantly, Next.js lets you ",(0,i.jsx)(s.strong,{children:"choose"}),' which pre-rendering form you\'d like to use for each page. You can create a "hybrid" Next.js app by using Static Generation for most pages and using Server-side Rendering for others.']}),"\n",(0,i.jsxs)(s.p,{children:["We ",(0,i.jsx)(s.strong,{children:"recommend"})," using ",(0,i.jsx)(s.strong,{children:"Static Generation"})," over Server-side Rendering for performance reasons. Statically generated pages can be cached by CDN with no extra configuration to boost performance. However, in some cases, Server-side Rendering might be the only option."]}),"\n",(0,i.jsxs)(s.p,{children:["You can also use ",(0,i.jsx)(s.strong,{children:"Client-side Rendering"})," along with Static Generation or Server-side Rendering. That means some parts of a page can be rendered entirely by client side JavaScript. To learn more, take a look at the ",(0,i.jsx)(s.a,{href:"/docs/basic-features/data-fetching/client-side.md",children:"Data Fetching"})," documentation."]}),"\n",(0,i.jsx)(s.h2,{id:"static-generation-recommended",children:"Static Generation (Recommended)"}),"\n",(0,i.jsxs)(s.p,{children:["If a page uses ",(0,i.jsx)(s.strong,{children:"Static Generation"}),", the page HTML is generated at ",(0,i.jsx)(s.strong,{children:"build time"}),". That means in production, the page HTML is generated when you run ",(0,i.jsx)(s.code,{children:"next build"})," . This HTML will then be reused on each request. It can be cached by a CDN."]}),"\n",(0,i.jsxs)(s.p,{children:["In Next.js, you can statically generate pages ",(0,i.jsx)(s.strong,{children:"with or without data"}),". Let's take a look at each case."]}),"\n",(0,i.jsx)(s.h3,{id:"static-generation-without-data",children:"Static Generation without data"}),"\n",(0,i.jsx)(s.p,{children:"By default, Next.js pre-renders pages using Static Generation without fetching data. Here's an example:"}),"\n",(0,i.jsx)(s.div,{"data-rehype-pretty-code-fragment":"",children:(0,i.jsx)(s.pre,{children:(0,i.jsxs)(s.code,{"data-language":"text","data-theme":"default",children:[(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"function About() {"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  return <div>About</div>"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"}"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"}})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"export default About"})})]})})}),"\n",(0,i.jsx)(s.p,{children:"Note that this page does not need to fetch any external data to be pre-rendered. In cases like this, Next.js generates a single HTML file per page during build time."}),"\n",(0,i.jsx)(s.h3,{id:"static-generation-with-data",children:"Static Generation with data"}),"\n",(0,i.jsx)(s.p,{children:"Some pages require fetching external data for pre-rendering. There are two scenarios, and one or both might apply. In each case, you can use a special function Next.js provides:"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["Your page ",(0,i.jsx)(s.strong,{children:"content"})," depends on external data: Use ",(0,i.jsx)(s.code,{children:"getStaticProps"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:["Your page ",(0,i.jsx)(s.strong,{children:"paths"})," depend on external data: Use ",(0,i.jsx)(s.code,{children:"getStaticPaths"})," (usually in addition to ",(0,i.jsx)(s.code,{children:"getStaticProps"}),")."]}),"\n"]}),"\n",(0,i.jsxs)(s.h4,{id:"scenario-1-your-page-content-depends-on-external-data",children:["Scenario 1: Your page ",(0,i.jsx)(s.strong,{children:"content"})," depends on external data"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Example"}),": Your blog page might need to fetch the list of blog posts from a CMS (content management system)."]}),"\n",(0,i.jsx)(s.div,{"data-rehype-pretty-code-fragment":"",children:(0,i.jsx)(s.pre,{children:(0,i.jsxs)(s.code,{"data-language":"text","data-theme":"default",children:[(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"// TODO: Need to fetch `posts` (by calling some API endpoint)"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"//       before this page can be pre-rendered."})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"function Blog({ posts }) {"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  return ("})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"    <ul>"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"      {posts.map((post) => ("})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"        <li>{post.title}</li>"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"      ))}"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"    </ul>"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  )"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"}"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"}})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"export default Blog"})})]})})}),"\n",(0,i.jsxs)(s.p,{children:["To fetch this data on pre-render, Next.js allows you to ",(0,i.jsx)(s.code,{children:"export"})," an ",(0,i.jsx)(s.code,{children:"async"})," function called ",(0,i.jsx)(s.code,{children:"getStaticProps"})," from the same file. This function gets called at build time and lets you pass fetched data to the page's ",(0,i.jsx)(s.code,{children:"props"})," on pre-render."]}),"\n",(0,i.jsx)(s.div,{"data-rehype-pretty-code-fragment":"",children:(0,i.jsx)(s.pre,{children:(0,i.jsxs)(s.code,{"data-language":"text","data-theme":"default",children:[(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"function Blog({ posts }) {"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  // Render posts..."})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"}"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"}})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"// This function gets called at build time"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"export async function getStaticProps() {"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  // Call an external API endpoint to get posts"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  const res = await fetch('https://.../posts')"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  const posts = await res.json()"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"}})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  // By returning { props: { posts } }, the Blog component"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  // will receive `posts` as a prop at build time"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  return {"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"    props: {"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"      posts"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"    }"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  }"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"}"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"}})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"export default Blog"})})]})})}),"\n",(0,i.jsxs)(s.p,{children:["To learn more about how ",(0,i.jsx)(s.code,{children:"getStaticProps"})," works, check out the ",(0,i.jsx)(s.a,{href:"/docs/basic-features/data-fetching/get-static-props.md",children:"Data Fetching documentation"}),"."]}),"\n",(0,i.jsx)(s.h4,{id:"scenario-2-your-page-paths-depend-on-external-data",children:"Scenario 2: Your page paths depend on external data"}),"\n",(0,i.jsxs)(s.p,{children:["Next.js allows you to create pages with ",(0,i.jsx)(s.strong,{children:"dynamic routes"}),". For example, you can create a file called ",(0,i.jsx)(s.code,{children:"pages/posts/[id].js"})," to show a single blog post based on ",(0,i.jsx)(s.code,{children:"id"}),". This will allow you to show a blog post with ",(0,i.jsx)(s.code,{children:"id: 1"})," when you access ",(0,i.jsx)(s.code,{children:"posts/1"}),"."]}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:["To learn more about dynamic routing, check the ",(0,i.jsx)(s.a,{href:"/docs/routing/dynamic-routes.md",children:"Dynamic Routing documentation"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:["However, which ",(0,i.jsx)(s.code,{children:"id"})," you want to pre-render at build time might depend on external data."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Example"}),": suppose that you've only added one blog post (with ",(0,i.jsx)(s.code,{children:"id: 1"}),") to the database. In this case, you'd only want to pre-render ",(0,i.jsx)(s.code,{children:"posts/1"})," at build time."]}),"\n",(0,i.jsxs)(s.p,{children:["Later, you might add the second post with ",(0,i.jsx)(s.code,{children:"id: 2"}),". Then you'd want to pre-render ",(0,i.jsx)(s.code,{children:"posts/2"})," as well."]}),"\n",(0,i.jsxs)(s.p,{children:["So your page ",(0,i.jsx)(s.strong,{children:"paths"})," that are pre-rendered depend on external data**.** To handle this, Next.js lets you ",(0,i.jsx)(s.code,{children:"export"})," an ",(0,i.jsx)(s.code,{children:"async"})," function called ",(0,i.jsx)(s.code,{children:"getStaticPaths"})," from a dynamic page (",(0,i.jsx)(s.code,{children:"pages/posts/[id].js"})," in this case). This function gets called at build time and lets you specify which paths you want to pre-render."]}),"\n",(0,i.jsx)(s.div,{"data-rehype-pretty-code-fragment":"",children:(0,i.jsx)(s.pre,{children:(0,i.jsxs)(s.code,{"data-language":"text","data-theme":"default",children:[(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"// This function gets called at build time"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"export async function getStaticPaths() {"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  // Call an external API endpoint to get posts"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  const res = await fetch('https://.../posts')"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  const posts = await res.json()"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"}})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  // Get the paths we want to pre-render based on posts"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  const paths = posts.map((post) => ({"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"    params: { id: post.id }"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  }))"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"}})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  // We'll pre-render only these paths at build time."})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  // { fallback: false } means other routes should 404."})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  return { paths, fallback: false }"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"}"})})]})})}),"\n",(0,i.jsxs)(s.p,{children:["Also in ",(0,i.jsx)(s.code,{children:"pages/posts/[id].js"}),", you need to export ",(0,i.jsx)(s.code,{children:"getStaticProps"})," so that you can fetch the data about the post with this ",(0,i.jsx)(s.code,{children:"id"})," and use it to pre-render the page:"]}),"\n",(0,i.jsx)(s.div,{"data-rehype-pretty-code-fragment":"",children:(0,i.jsx)(s.pre,{children:(0,i.jsxs)(s.code,{"data-language":"text","data-theme":"default",children:[(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"function Post({ post }) {"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  // Render post..."})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"}"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"}})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"export async function getStaticPaths() {"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  // ..."})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"}"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"}})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"// This also gets called at build time"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"export async function getStaticProps({ params }) {"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  // params contains the post `id`."})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  // If the route is like /posts/1, then params.id is 1"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  const res = await fetch(`https://.../posts/${params.id}`)"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  const post = await res.json()"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"}})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  // Pass post data to the page via props"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  return { props: { post } }"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"}"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"}})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"export default Post"})})]})})}),"\n",(0,i.jsxs)(s.p,{children:["To learn more about how ",(0,i.jsx)(s.code,{children:"getStaticPaths"})," works, check out the ",(0,i.jsx)(s.a,{href:"/docs/basic-features/data-fetching/get-static-paths.md",children:"Data Fetching documentation"}),"."]}),"\n",(0,i.jsx)(s.h3,{id:"when-should-i-use-static-generation",children:"When should I use Static Generation?"}),"\n",(0,i.jsxs)(s.p,{children:["We recommend using ",(0,i.jsx)(s.strong,{children:"Static Generation"})," (with and without data) whenever possible because your page can be built once and served by CDN, which makes it much faster than having a server render the page on every request."]}),"\n",(0,i.jsx)(s.p,{children:"You can use Static Generation for many types of pages, including:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Marketing pages"}),"\n",(0,i.jsx)(s.li,{children:"Blog posts"}),"\n",(0,i.jsx)(s.li,{children:"E-commerce product listings"}),"\n",(0,i.jsx)(s.li,{children:"Help and documentation"}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:['You should ask yourself: "Can I pre-render this page ',(0,i.jsx)(s.strong,{children:"ahead"})," of a user's request?\" If the answer is yes, then you should choose Static Generation."]}),"\n",(0,i.jsxs)(s.p,{children:["On the other hand, Static Generation is ",(0,i.jsx)(s.strong,{children:"not"})," a good idea if you cannot pre-render a page ahead of a user's request. Maybe your page shows frequently updated data, and the page content changes on every request."]}),"\n",(0,i.jsx)(s.p,{children:"In cases like this, you can do one of the following:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Use Static Generation with ",(0,i.jsx)(s.strong,{children:"Client-side Rendering:"})," You can skip pre-rendering some parts of a page and then use client-side JavaScript to populate them. To learn more about this approach, check out the ",(0,i.jsx)(s.a,{href:"/docs/basic-features/data-fetching/client-side.md",children:"Data Fetching documentation"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:["Use ",(0,i.jsx)(s.strong,{children:"Server-Side Rendering:"})," Next.js pre-renders a page on each request. It will be slower because the page cannot be cached by a CDN, but the pre-rendered page will always be up-to-date. We'll talk about this approach below."]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"server-side-rendering",children:"Server-side Rendering"}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsx)(s.p,{children:'Also referred to as "SSR" or "Dynamic Rendering".'}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:["If a page uses ",(0,i.jsx)(s.strong,{children:"Server-side Rendering"}),", the page HTML is generated on ",(0,i.jsx)(s.strong,{children:"each request"}),"."]}),"\n",(0,i.jsxs)(s.p,{children:["To use Server-side Rendering for a page, you need to ",(0,i.jsx)(s.code,{children:"export"})," an ",(0,i.jsx)(s.code,{children:"async"})," function called ",(0,i.jsx)(s.code,{children:"getServerSideProps"}),". This function will be called by the server on every request."]}),"\n",(0,i.jsxs)(s.p,{children:["For example, suppose that your page needs to pre-render frequently updated data (fetched from an external API). You can write ",(0,i.jsx)(s.code,{children:"getServerSideProps"})," which fetches this data and passes it to ",(0,i.jsx)(s.code,{children:"Page"})," like below:"]}),"\n",(0,i.jsx)(s.div,{"data-rehype-pretty-code-fragment":"",children:(0,i.jsx)(s.pre,{children:(0,i.jsxs)(s.code,{"data-language":"text","data-theme":"default",children:[(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"function Page({ data }) {"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  // Render data..."})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"}"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"}})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"// This gets called on every request"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"export async function getServerSideProps() {"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  // Fetch data from external API"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  const res = await fetch(`https://.../data`)"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  const data = await res.json()"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"}})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  // Pass data to the page via props"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  return { props: { data } }"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"}"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"}})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"export default Page"})})]})})}),"\n",(0,i.jsxs)(s.p,{children:["As you can see, ",(0,i.jsx)(s.code,{children:"getServerSideProps"})," is similar to ",(0,i.jsx)(s.code,{children:"getStaticProps"}),", but the difference is that ",(0,i.jsx)(s.code,{children:"getServerSideProps"})," is run on every request instead of on build time."]}),"\n",(0,i.jsxs)(s.p,{children:["To learn more about how ",(0,i.jsx)(s.code,{children:"getServerSideProps"})," works, check out our ",(0,i.jsx)(s.a,{href:"/docs/basic-features/data-fetching/get-server-side-props.md",children:"Data Fetching documentation"})]}),"\n",(0,i.jsx)(s.h2,{id:"summary",children:"Summary"}),"\n",(0,i.jsx)(s.p,{children:"We've discussed two forms of pre-rendering for Next.js."}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Static Generation (Recommended):"})," The HTML is generated at ",(0,i.jsx)(s.strong,{children:"build time"})," and will be reused on each request. To make a page use Static Generation, either export the page component, or export ",(0,i.jsx)(s.code,{children:"getStaticProps"})," (and ",(0,i.jsx)(s.code,{children:"getStaticPaths"})," if necessary). It's great for pages that can be pre-rendered ahead of a user's request. You can also use it with Client-side Rendering to bring in additional data."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Server-side Rendering:"})," The HTML is generated on ",(0,i.jsx)(s.strong,{children:"each request"}),". To make a page use Server-side Rendering, export ",(0,i.jsx)(s.code,{children:"getServerSideProps"}),". Because Server-side Rendering results in slower performance than Static Generation, use this only if absolutely necessary."]}),"\n"]})]})}function x(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},s=Object.assign({},(0,c.ah)(),e.components),n=s.wrapper;return n?(0,i.jsx)(n,(0,r.Z)((0,a.Z)({},e),{children:(0,i.jsx)(p,(0,a.Z)({},e))})):p(e)}h.title="Next.js Pages";(t=globalThis).__nextra_pageContext__||(t.__nextra_pageContext__=Object.create(null)),globalThis.__nextra_pageContext__["/posts/pages"]={Content:function(e){return(0,i.jsx)(o.mK.Provider,{value:e,children:(0,i.jsx)(x,{})})},pageOpts:h,themeConfig:l.Z}}},function(e){e.O(0,[521,774,888,179],(function(){return s=7612,e(e.s=s);var s}));var s=e.O();_N_E=s}]);